/**
 * Generated by orval v6.23.0 🍺
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.33
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  Auth
} from '../model/auth'
import type {
  BodyAPILogin
} from '../model/bodyAPILogin'
import type {
  Token
} from '../model/token'



  export const getAuth = () => {
/**
 * Logs in a user
 * @summary Login
 */
const aPILogin = <TData = AxiosResponse<Token>>(
    bodyAPILogin: BodyAPILogin, options?: AxiosRequestConfig
 ): Promise<TData> => {const formUrlEncoded = new URLSearchParams();
if(bodyAPILogin.grant_type !== undefined) {
 formUrlEncoded.append('grant_type', bodyAPILogin.grant_type)
 }
formUrlEncoded.append('username', bodyAPILogin.username)
formUrlEncoded.append('password', bodyAPILogin.password)
if(bodyAPILogin.scope !== undefined) {
 formUrlEncoded.append('scope', bodyAPILogin.scope)
 }
if(bodyAPILogin.client_id !== undefined) {
 formUrlEncoded.append('client_id', bodyAPILogin.client_id)
 }
if(bodyAPILogin.client_secret !== undefined) {
 formUrlEncoded.append('client_secret', bodyAPILogin.client_secret)
 }

    return axios.post(
      `http://127.0.0.1:5002/api/auth/login`,
      formUrlEncoded,options
    );
  }
/**
 * Logs in a user
 * @summary Get Token
 */
const aPIGetToken = <TData = AxiosResponse<Token>>(
    auth: Auth, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `http://127.0.0.1:5002/api/auth/token`,
      auth,options
    );
  }
return {aPILogin,aPIGetToken}};
export type APILoginResult = AxiosResponse<Token>
export type APIGetTokenResult = AxiosResponse<Token>
